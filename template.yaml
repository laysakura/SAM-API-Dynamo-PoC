AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: User API with API Gateway, Lambda and DynamoDB

Globals:
  Function:
    Timeout: 10
    Runtime: python3.13
    Architectures:
      - x86_64
    Environment:
      Variables:
        DYNAMODB_TABLE: Users
        AWS_ENDPOINT_URL: !If [IsLocal, 'http://dynamodb:8000', !Ref AWS::NoValue]

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Stage for deployment

Conditions:
  IsLocal: !Equals [!Ref Stage, 'dev']

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: Usage plan for User API
          Quota:
            Limit: 1000
            Period: DAY
          Throttle:
            BurstLimit: 100
            RateLimit: 50

  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: app.get_user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        GetUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users
            Method: get
            Auth:
              ApiKeyRequired: true

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH

Outputs:
  ApiURL:
    Description: "API endpoint URL"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/users"
  ApiId:
    Description: "API Gateway ID"
    Value: !Ref ApiGatewayApi
